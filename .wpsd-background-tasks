#!/bin/bash

# This script checks for background/bootstrap tasks, which are used for near
# real-time bug fixes, etc.: exec'd before manual and cron updates; called from
# dashboard's main index page via JS refresh/reload func, `function
# executeBackgroundTasks()` which is called every 5 mins, but task only
# execs every 1 hour.
#
# Task script itself lives in repo ($BackendURI) and is piped to bash from there.

if [ "$(id -u)" != "0" ]; then # must be root
  exit 1
fi

exec 200>/var/lock/wpsd-bg-tasks.lock || exit 1 # only one exec per time
if ! flock -n 200 ; then
  exit 1
fi

# check age of task marker file if it exists, and if it's < 4 hours young, bail.
if [  -f '/var/run/wpsd-bg-tasks' ] && [ "$(( $(date +"%s") - $(stat -c "%Y" "/var/run/wpsd-bg-tasks") ))" -lt "3600" ]; then
    exit 0 # marker either does not exist or it's > 1 hours old - so we continue running this script...
fi

source /usr/local/sbin/.wpsd-common-funcs

if conn_check; then
    touch /var/run/wpsd-bg-tasks # create/reset the task marker age
    curl -Ls -A "WPSD-BG-Task Dashboard Client-Side Bootstrap" ${bgtBackendURI} | bash > /dev/null 2>&1 # bootstrap
else
    exit 1
fi

